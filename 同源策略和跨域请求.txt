同源策略
同源的定义：如果两个页面的 协议、域名、和端口 都相同，则两个页面具有相同的源，就是同源。

同源策略：是由Netscape提出的一个著名的安全策略，是浏览器的一个安全功能，现在所有支持 JavaScript 的浏览器都会使用这个策略，不同源的客户端脚本在没有明确授权的情况下，不能读写对方资源。所以xyz.com下的js脚本采用ajax读取abc.com里面的文件数据是会被拒绝的。
同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。

同源举例：
http://www.example.com/dir/page.html这个网址，协议是http://，域名是www.example.com，端口是80（默认端口可以省略）。它的同源情况如下。
http://www.example.com/dir2/other.html    同源
http://example.com/dir/other.html         不同源（域名不同）
http://v2.www.example.com/dir/other.html  不同源（域名不同）
http://www.example.com:81/dir/other.html  不同源（端口不同）


同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据。


不受同源策略限制的
1. 页面中的链接，重定向以及表单提交是不会受到同源策略限制的。
2. 跨域资源的引入是可以的。但是js不能读写加载的内容。如嵌入到页面中的<script src="..."></script>，<img>，<link>，<iframe>等。

--------------------------------------------------------------------

跨域请求
为了保证用户安全，浏览器的同源策略 禁止 页面发起跨域的ajax请求。

跨域请求：来源于一个域的页面向另一个域发起的请求，叫做跨域请求。
不同域：url中，协议名、域名(IP)、端口号，三者有一个不同，就算是跨域。


实现跨域请求有3种方式：

1、CORS  跨域资源共享 Cross-origin resource sharing 它是W3C标准，是跨源AJAX请求的根本解决方法。相比JSONP只能发GET请求，CORS允许任何类型的请求
浏览器对于跨域ajax请求，并没有直接拦截，而是向目标服务器发起了请求，然后在请求在响应头中寻找是否有access-control-allow-origin字段，并查看这个字段中的值是否包含本页面的来源，如果包含则不禁止本次请求，如果不包含，则禁止本次请求。(这种跨域方案部分老浏览器不支持：低于IE10的IE浏览器)


2、JSONP(JSON padding):
JSONP是服务器与客户端跨源通信的常用方法。最大特点就是简单适用，老式浏览器全部支持，服务器改造非常小。
它的基本思想是，网页通过添加一个<script>元素，向服务器请求JSON数据，这种做法不受同源政策限制；服务器收到请求后，将数据放在一个指定名字的回调函数里传回来。


3、PROXY 代理服务器
A域的页面向B域发起的ajax请求会被浏览器视为跨域请求，那么可以先让A域的页面向A服务器发起请求，然后A服务器收到这个请求之后，将请求转发给B服务器(服务器发送请求不存在跨域限制)，从B服务器收到响应之后，再将这个响应回复给A域的页面。


跨域限制只在浏览器上，手机App不存在跨域限制



